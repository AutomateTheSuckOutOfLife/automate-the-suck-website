---
import Layout from '../../layouts/Layout.astro';
import { blogPosts, type BlogPost } from '../../components/BlogPosts';
import { marked } from 'marked';

export function getStaticPaths() {
  return blogPosts.map((post) => ({
    params: { id: post.id },
    props: { post },
  }));
}

interface Props {
  post: BlogPost;
}

const { post } = Astro.props;

// Function to insert embeds at their proper positions
function insertEmbeds(content: string, embeds: BlogPost['embeds']) {
  if (!embeds) return content;
  
  let htmlContent = content;
  embeds.forEach((embed, index) => {
    const embedPlaceholder = `<!-- embed-${index} -->`;
    const embedHtml = embed.type === 'video' 
      ? `<div class="aspect-w-16 aspect-h-9 my-8">
          <iframe 
            src="https://www.youtube.com/embed/${embed.url.split('v=')[1]?.split('&')[0]}" 
            frameborder="0" 
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
            allowfullscreen
            class="rounded-lg"
          ></iframe>
        </div>`
      : `<figure class="my-8">
          <img 
            src="${embed.url}" 
            alt="${embed.alt || ''}" 
            class="rounded-lg w-full"
          />
          ${embed.caption ? `<figcaption class="text-center text-accent/60 dark:text-dark-text/60 mt-2 italic">${embed.caption}</figcaption>` : ''}
        </figure>`;
    
    htmlContent = htmlContent.replace(embedPlaceholder, embedHtml);
  });
  
  return htmlContent;
}

const markedContent = await marked(post.content);
const htmlContent = insertEmbeds(markedContent, post.embeds);
---

<Layout title={`${post.title} | Writing`}>
  <article class="max-w-2xl mx-auto px-4 py-16">
    <header class="mb-8">
      <h1 class="text-4xl font-serif font-bold text-accent dark:text-dark-text mb-4">{post.title}</h1>
      <p class="text-accent/80 dark:text-dark-text/80 italic mb-4">{post.subtitle}</p>
      <div class="flex gap-4 text-sm text-accent/60 dark:text-dark-text/60">
        {post.date && (
          <time datetime={post.date}>
            {new Date(post.date).toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
        )}
        {post.category && (
          <span class="bg-primary/10 dark:bg-dark-primary/10 px-3 py-1 rounded-full">
            {post.category}
          </span>
        )}
      </div>
    </header>
    
    <div 
      class="prose prose-lg prose-primary dark:prose-invert max-w-none text-accent dark:text-dark-text"
      set:html={htmlContent}
    />
    
    <div class="mt-12 pt-4 border-t border-primary/20 dark:border-dark-primary/20">
      <a 
        href="/writing"
        class="text-link-base hover:text-link-hover dark:text-link-dark-base dark:hover:text-link-dark-hover transition-colors"
      >
        ‚Üê Back to all posts
      </a>
    </div>
  </article>
</Layout>

<style>
  /* Add styles for markdown content */
  :global(.prose) {
    --tw-prose-body: theme('colors.accent');
    --tw-prose-headings: theme('colors.primary');
    --tw-prose-links: theme('colors.link.base');
    --tw-prose-bold: theme('colors.accent');
    --tw-prose-counters: theme('colors.primary');
    --tw-prose-bullets: theme('colors.primary');
    --tw-prose-quotes: theme('colors.primary');
    --tw-prose-code: theme('colors.primary');
    --tw-prose-hr: theme('colors.primary' / 0.2);
    --tw-prose-th-borders: theme('colors.primary' / 0.2);
    --tw-prose-td-borders: theme('colors.primary' / 0.2);
  }

  :global(.dark .prose) {
    --tw-prose-body: theme('colors.dark.text');
    --tw-prose-headings: theme('colors.dark.accent');
    --tw-prose-links: theme('colors.link.dark.base');
    --tw-prose-bold: theme('colors.dark.text');
    --tw-prose-counters: theme('colors.dark.accent');
    --tw-prose-bullets: theme('colors.dark.accent');
    --tw-prose-quotes: theme('colors.dark.accent');
    --tw-prose-code: theme('colors.dark.accent');
    --tw-prose-hr: theme('colors.dark.primary' / 0.2);
    --tw-prose-th-borders: theme('colors.dark.primary' / 0.2);
    --tw-prose-td-borders: theme('colors.dark.primary' / 0.2);
  }

  /* Add styles for embedded content */
  :global(.aspect-w-16) {
    position: relative;
    padding-bottom: 56.25%; /* 16:9 */
  }

  :global(.aspect-w-16 iframe) {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
</style>